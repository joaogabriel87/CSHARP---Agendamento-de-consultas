// <auto-generated />
using System;
using Agendamento.Date;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agendamento.Migrations
{
    [DbContext(typeof(DateContext))]
    partial class DateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Agendamento.Models.Consulta", b =>
                {
                    b.Property<int>("Protocolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Protocolo"));

                    b.Property<string>("DataConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(48)");

                    b.Property<int?>("EspecialidadeCRM")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoCRM")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteCPF")
                        .HasColumnType("int");

                    b.HasKey("Protocolo");

                    b.HasIndex("EspecialidadeCRM");

                    b.HasIndex("MedicoCRM");

                    b.HasIndex("PacienteCPF");

                    b.ToTable("ConsultaDB");
                });

            modelBuilder.Entity("Agendamento.Models.Medico", b =>
                {
                    b.Property<int>("CRM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CRM"));

                    b.Property<string>("Especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CRM");

                    b.ToTable("MedicoDB");
                });

            modelBuilder.Entity("Agendamento.Models.Paciente", b =>
                {
                    b.Property<int>("CPF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CPF"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CPF");

                    b.ToTable("PacienteDB");
                });

            modelBuilder.Entity("Agendamento.Models.Consulta", b =>
                {
                    b.HasOne("Agendamento.Models.Medico", "Especialidade")
                        .WithMany()
                        .HasForeignKey("EspecialidadeCRM");

                    b.HasOne("Agendamento.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoCRM");

                    b.HasOne("Agendamento.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteCPF");

                    b.Navigation("Especialidade");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
